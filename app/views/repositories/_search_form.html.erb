<% availability ||= false # do not require to be passed as a local -%>
<% search_action_url = search_repository_catalog_path(repository_id: params[:repository_id]) -%>
<%= form_tag search_action_url, :method => :get, :class => 'clearfix' do %>
  <%= render_hash_as_hidden_fields(search_state.params_for_search.except(:q, :search_field, :repository_id, :qt, :page, :utf8, :format).tap { |p| p[:'f[content_availability][]'] = availability if availability; p }) %>

  <div class="input-group">
    <% unless search_fields.empty? %>
    <span class="input-group-prepend hide"> <%# to be removed. might need hidde %>
      <label for="search_field" class="sr-only"><%= t('blacklight.search.form.search_field.label') %></label>
      <%= select_tag(:search_field, options_for_select(search_fields, h(params[:search_field])), :title => t('blacklight.search.form.search_field.title'), :class=>"search_field") %>
      <span class="sr-only"><%= t('blacklight.search.form.search_field.post_label') %></span>
    </span>
    <% end %>
    <label for="q" class="sr-only"><%= t('blacklight.search.form.q') %></label>
    <%= text_field_tag :q, params[:q], :placeholder => (!query_has_constraints? ?  t(:"dlc.search_placeholder.new.#{controller.controller_name}", default: :'dlc.search_placeholder.new.default').html_safe : t(:"dlc.search_placeholder.modified.#{controller.controller_name}", default: :'dlc.search_placeholder.modifed.default').html_safe), :class => "search_q q form-control", :id => "q" %>
    <div class="input-group-append">
  <%= link_to '<i class="fa fa-remove"></i>'.html_safe, start_over_path, :title => 'Start Over', :class => 'btn btn-secondary reset-btn' if query_has_constraints? %>
      <button class="btn btn-primary search-btn" type="submit" aria-label="Submit">
        <span class="fa fa-search"></span>
      </button>
    </div>
  </div>

<% end %>
