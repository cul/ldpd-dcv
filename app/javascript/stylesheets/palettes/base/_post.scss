@import 'bootstrap/scss/variables';
@import 'bootstrap/scss/mixins/breakpoints';

// navbar-primary is a local style following BS4 patterns
$navbar-primary-color:                 rgba(map-get($theme-text-colors, 'primary'), .7) !default;
$navbar-primary-hover-color:           rgba(map-get($theme-text-colors, 'primary'), .9) !default;
$navbar-primary-active-color:          map-get($theme-text-colors, 'primary') !default;
$navbar-primary-disabled-color:        rgba(map-get($theme-text-colors, 'primary'), .25) !default;
$navbar-primary-toggler-icon-bg:       url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'><path stroke='#{$navbar-primary-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>") !default;
$navbar-primary-toggler-border-color:  rgba(map-get($theme-border-colors, 'primary'), .1) !default;
$navbar-primary-brand-color:                 $navbar-primary-active-color !default;
$navbar-primary-brand-hover-color:           $navbar-primary-active-color !default;

// default brand colors if necessary
$brand: transparent !default;
$brand-color: $body-color !default;
$brand-border-color: $body-border-color !default;
// refresh colr maps post-theme variables
$theme-colors: map-merge(
  (
    "primary":    $primary,
    "secondary":  $secondary,
    "success":    $success,
    "info":       $info,
    "warning":    $warning,
    "danger":     $danger,
    "light":      $light,
    "dark":       $dark,
    "brand":      $brand
  ),
  $theme-colors
);

$theme-text-colors: map-merge(
  (
    "primary":    color-yiq($primary),
    "secondary":  color-yiq($secondary),
    "success":    color-yiq($success),
    "info":       color-yiq($info),
    "warning":    color-yiq($warning),
    "danger":     color-yiq($danger),
    "light":      color-yiq($light),
    "dark":       color-yiq($dark),
    "brand":      $brand-color
  ),
  $theme-text-colors
);

$theme-border-colors: map-merge(
  (
    "primary":    $primary,
    "secondary":  $secondary,
    "success":    $success,
    "info":       $info,
    "warning":    $warning,
    "danger":     $danger,
    "light":      $light,
    "dark":       $dark,
    "brand":      $brand-border-color
  ),
  $theme-border-colors
);

// viewport utilities
//
// Custom styles for additional viewport height options.

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $size in map-keys($sizes) {
      @if $size != auto {
        .vh#{$infix}-#{$size} { height: #{$size}vh !important; }
      }
    }
    .h#{$infix}-auto {
      height: auto !important;
    }
  }
}

@each $size in map-keys($sizes) {
  @if $size != auto {
    @if $size != 100 {
      .vh-#{$size} { height: #{$size}vh !important; }
      .min-vh-#{$size} { min-height: #{$size}vh !important; }
    }
  }
}
